vector中
vector<int> nums;
auto it=nums.find(nums.begin(),nums.end(),target);
if(it!=nums.end())//找到目标值
{
	cout<<"yes"<<endl;
}
else{
	cout<<"no"<<endl;
}
返回值：如果查找，返回其在向量中的位置，可使用此迭代器通过it-nums.begin()表示下标，*it表示其下标对应的值，查不找，返回nums.end()
map中
map<int,int> mp;
if(mp.find(target)!=mp.end())//找到目标值
{
	cout<<"yes"<<endl;
}
else{
	cout<<"no"<<endl;
}
返回值：如果查找，它返回一个指向与键target关联的元素的迭代器，可使用此迭代器通过->first或者->second，查不找，返回mp.end():表示末端元素的下一个元素，这个迭代器起一个哨兵的作用，表示已经处理完所有的元素
string中
string a,b;
if(a.find(b)!=string::npos)//找到目标值
{
	cout<<"yes"<<endl;
}
else{
	cout<<"no"<<endl;
}
返回值：如果查找，返回第一个下标，是无符号整型，如果查找不到，就会返回4294967295（string::npos表示-1或4294967295）
 